image: docker:19.03.13

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:19.03.13-dind

build-app-master:
  stage: build
  environment: frontend
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  only:
    - master

deploy-app-master:
      stage: deploy
      image: alpine
      environment: frontend
      script:
        - apk add --no-cache curl
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        - chmod +x ./kubectl
        - mv ./kubectl /usr/local/bin/kubectl
        - sed 's=_APP_NAME_='"$CI_PROJECT_NAME"'=g; s=_IMAGE_='"$CI_REGISTRY_IMAGE\:$CI_COMMIT_SHORT_SHA"'=g' kubernetes.template.yml > kubernetes.yml;
        - cat kubernetes.yml
        - sed 's=_APP_NAME_='"$CI_PROJECT_NAME"'=g' ingress.production.template.yml > ingress.yml;
        - cat ingress.yml
        - kubectl apply -f kubernetes.yml
        - kubectl apply -f ingress.yml
        - kubectl get deployments
        - kubectl get services
        - kubectl get ingress
        - kubectl get pods
      only:
        - master
